{"version":3,"sources":["components/themes/basic/Card.tsx","../node_modules/react-bootstrap/esm/Button.js","components/themes/basic/SectionProjects.tsx"],"names":["renderTeam","cardDetail","team","className","content","renderDescription","description","renderCardDetail","titleColor","imageSrc","thumbnail","re_weburl","test","process","config","imagesPath","alt","src","style","color","title","Card","props","webPage","slug","detail","href","marginLeft","marginRight","to","slugPrefix","url","_excluded","Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","block","type","as","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","renderSectionBody","sectionDetail","keyPrefix","limitItemsToRender","count","maxItems","maxItemsToRender","list","length","maxItemsToRenderInHomePage","projects","map","project","index","render","projectDetail","key","id","name","renderProject","value","textAlign","Section","ProfileField","Projects","renderDividerAboveLabel","label","renderDividerBelowLabel"],"mappings":"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","file":"static/js/0.aae92963.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport Markdown from '../../Markdown';\nimport re_weburl from '../../../auxiliaries/regex-weburl';\nimport config from '../../../config';\n\nimport { WebPageType } from '../../../types/profileWeb';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  id: string;\n  slugPrefix: string; // `//example.com${slugPrefix}/${slug}`\n  url?: string; // link\n  webPage?: WebPageType;\n  title: string;\n  team?: string;\n  description: string;\n  thumbnail?: string;\n}\n\nconst renderTeam = (cardDetail: ComponentProps): JSX.Element | undefined => {\n  if (cardDetail.team) {\n    return (\n      <Markdown\n        className=\"content-body markdown content-text\"\n        content={cardDetail.team}\n      />\n    );\n  }\n};\n\nconst renderDescription = (cardDetail: ComponentProps): JSX.Element => {\n  return (\n    <Markdown\n      className=\"content-body markdown content-text\"\n      content={cardDetail.description}\n    />\n  );\n};\n\nconst renderCardDetail = (\n  cardDetail: ComponentProps,\n  titleColor: string = 'black'\n) => {\n  let imageSrc = cardDetail.thumbnail;\n  if (imageSrc && !re_weburl.test(imageSrc)) {\n    imageSrc = `${process.env.PUBLIC_URL}/${config.imagesPath}/${imageSrc}`;\n  }\n\n  return (\n    <>\n      <div className=\"col-md-2 content-card-img\">\n        <img\n          className=\"img-fluid border rounded image-item\"\n          alt=\"thumbnail\"\n          src={imageSrc}\n        />\n      </div>\n      <div className=\"col-md-10\">\n        <div className=\"content-text-bold\" style={{ color: `${titleColor}` }}>\n          {cardDetail.title}\n        </div>\n        {renderTeam(cardDetail)}\n        {renderDescription(cardDetail)}\n      </div>\n    </>\n  );\n};\n\nconst Card: FunctionComponent<ComponentProps> = (props: ComponentProps) => {\n  if (\n    props.webPage &&\n    props.webPage.slug &&\n    props.webPage.slug !== '' &&\n    props.webPage.detail &&\n    props.webPage.detail !== ''\n  ) {\n    if (!re_weburl.test(props.webPage.slug)) {\n      return (\n        <Link to={`${props.slugPrefix}/${props.webPage.slug}`}>\n          <div\n            className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n            style={{ marginLeft: '0', marginRight: '0' }}\n          >\n            {renderCardDetail(props, '#0028ff')}\n          </div>\n        </Link>\n      );\n    } else {\n      return (\n        <a href={props.webPage.slug}>\n          <div\n            className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n            style={{ marginLeft: '0', marginRight: '0' }}\n          >\n            {renderCardDetail(props, '#0028ff')}\n          </div>\n        </a>\n      );\n    }\n  }\n\n  if (props.url && props.url !== '') {\n    return (\n      <a href={props.url}>\n        <div\n          className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n          style={{ marginLeft: '0', marginRight: '0' }}\n        >\n          {renderCardDetail(props, '#0028ff')}\n        </div>\n      </a>\n    );\n  }\n\n  return (\n    <div\n      className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n      style={{ marginLeft: '0', marginRight: '0' }}\n    >\n      {renderCardDetail(props)}\n    </div>\n  );\n};\n\nexport default Card;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport SectionLabel from './SectionLabel';\nimport Content from './Content';\nimport re_weburl from '../../../auxiliaries/regex-weburl';\nimport config from '../../../config';\nimport Card from './Card';\nimport Divider from './SectionDivider';\n\nimport { Project, Projects } from '../../../types/profileWeb';\nimport {ProfileField} from '../../../types/fields'\n\nimport './styles.css';\n\ninterface Props {\n  sectionDetail: Projects;\n  limitItemsToRender?: boolean;\n  renderDividerAboveLabel?: boolean;\n  renderDividerBelowLabel?: boolean;\n}\n\nconst renderProject = (projectDetail: Project, key: string): JSX.Element => {\n  let imageSrc = projectDetail.thumbnail;\n  if (imageSrc && !re_weburl.test(imageSrc)) {\n    imageSrc = `${process.env.PUBLIC_URL}/${config.imagesPath}/${imageSrc}`;\n  }\n\n  return (\n    <Card\n      key={key}\n      id={key}\n      slugPrefix={`/project`}\n      url={projectDetail.url}\n      webPage={projectDetail.webPage}\n      title={projectDetail.name}\n      team={projectDetail.team}\n      description={projectDetail.description}\n      thumbnail={projectDetail.thumbnail}\n    />\n  );\n};\n\nconst renderOverflowButton = () => {\n  return (\n    <Link key={'projects'} to=\"/projects\">\n      <div style={{ textAlign: 'end' }}>\n        <Button variant=\"primary\">Full Projects List {'>>'}</Button>\n      </div>\n    </Link>\n  );\n}\n\nconst renderSectionBody = (sectionDetail: Projects, keyPrefix: string, limitItemsToRender: boolean): JSX.Element => {\n  return (\n    <div className=\"content-body\">\n      <div className=\"content-list\">\n        {(() => {\n          let count = 0;\n          let maxItems = sectionDetail.maxItemsToRender ? sectionDetail.maxItemsToRender : (\n            sectionDetail.list.length <= config.maxItemsToRenderInHomePage.projects\n              ? sectionDetail.list.length\n              : config.maxItemsToRenderInHomePage.projects)\n              \n          return sectionDetail.list.map((project, index) => {\n            return project.render && count < maxItems\n              ?  (limitItemsToRender && ++count, renderProject(project.value, `${keyPrefix}_${index}`))\n              : (project.render && count === maxItems ? (++count, renderOverflowButton()) : '');\n          });\n        })()}\n      </div>\n    </div>\n  );\n}\n\nconst Section = (props: Props) => {\n  return (\n    <Content id={ProfileField.Projects}>\n      {props.renderDividerAboveLabel && <Divider />}\n      <SectionLabel label={props.sectionDetail.label} />\n      {props.renderDividerBelowLabel && <Divider />}\n      {renderSectionBody(props.sectionDetail, ProfileField.Projects, props.limitItemsToRender || false)}\n    </Content>\n  );\n};\n\nexport default Section;\n"],"sourceRoot":""}