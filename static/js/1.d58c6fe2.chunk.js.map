{"version":3,"sources":["components/themes/basic/Card.tsx","../node_modules/react-bootstrap/esm/Button.js","components/themes/basic/SectionPublications.tsx"],"names":["renderTeam","cardDetail","team","className","content","renderDescription","description","renderCardDetail","titleColor","imageSrc","thumbnail","re_weburl","test","process","config","imagesPath","alt","src","style","color","title","Card","props","webPage","slug","detail","href","marginLeft","marginRight","to","slugPrefix","url","_excluded","Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","block","type","as","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","renderPublicationMeta","publicationDetail","PublicationTypes","Article","journal","volume","pages","year","renderArticleMeta","Book","series","publisher","address","edition","renderBookMeta","Thesis","category","ThesisTypes","PhD","Masters","Bachelors","renderThesisMeta","TechReport","renderTechReportMeta","InCollection","editor","booktitle","renderInCollectionMeta","Misc","howpublished","renderMiscMeta","UnPublished","note","renderUnPublishedMeta","renderSectionBody","sectionDetail","keyPrefix","limitItemsToRender","count","maxItems","maxItemsToRender","list","length","maxItemsToRenderInHomePage","publications","map","publication","index","render","key","renderTitle","authors","author","renderAuthors","id","renderPublication","value","textAlign","Section","ProfileField","Publications","renderDividerAboveLabel","label","renderDividerBelowLabel"],"mappings":"wGAAA,oDAqBMA,GArBN,MAqBmB,SAACC,GAClB,GAAIA,EAAWC,KACb,OACE,kBAAC,UAAD,CACEC,UAAU,qCACVC,QAASH,EAAWC,SAMtBG,EAAoB,SAACJ,GACzB,OACE,kBAAC,UAAD,CACEE,UAAU,qCACVC,QAASH,EAAWK,eAKpBC,EAAmB,SACvBN,GAEI,IADJO,EACG,uDADkB,QAEjBC,EAAWR,EAAWS,UAK1B,OAJID,IAAaE,IAAUC,KAAKH,KAC9BA,EAAQ,UAAMI,GAAN,YAAgCC,IAAOC,WAAvC,YAAqDN,IAI7D,oCACE,yBAAKN,UAAU,6BACb,yBACEA,UAAU,sCACVa,IAAI,YACJC,IAAKR,KAGT,yBAAKN,UAAU,aACb,yBAAKA,UAAU,oBAAoBe,MAAO,CAAEC,MAAM,GAAD,OAAKX,KACnDP,EAAWmB,OAEbpB,EAAWC,GACXI,EAAkBJ,MA8DZoB,IAxDiC,SAACC,GAC/C,OACEA,EAAMC,SACND,EAAMC,QAAQC,MACS,KAAvBF,EAAMC,QAAQC,MACdF,EAAMC,QAAQE,QACW,KAAzBH,EAAMC,QAAQE,OAETd,IAAUC,KAAKU,EAAMC,QAAQC,MAa9B,uBAAGE,KAAMJ,EAAMC,QAAQC,MACrB,yBACErB,UAAU,qJACVe,MAAO,CAAES,WAAY,IAAKC,YAAa,MAEtCrB,EAAiBe,EAAO,aAhB7B,kBAAC,IAAD,CAAMO,GAAE,UAAKP,EAAMQ,WAAX,YAAyBR,EAAMC,QAAQC,OAC7C,yBACErB,UAAU,qJACVe,MAAO,CAAES,WAAY,IAAKC,YAAa,MAEtCrB,EAAiBe,EAAO,aAkB/BA,EAAMS,KAAqB,KAAdT,EAAMS,IAEnB,uBAAGL,KAAMJ,EAAMS,KACb,yBACE5B,UAAU,qJACVe,MAAO,CAAES,WAAY,IAAKC,YAAa,MAEtCrB,EAAiBe,EAAO,aAO/B,yBACEnB,UAAU,qJACVe,MAAO,CAAES,WAAY,IAAKC,YAAa,MAEtCrB,EAAiBe,M,iCCzHxB,kEAEIU,EAAY,CAAC,WAAY,UAAW,OAAQ,SAAU,YAAa,QAAS,OAAQ,MAUpFC,EAAsBC,IAAMC,YAAW,SAAUC,EAAMC,GACzD,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAASL,EAAKK,OACdtC,EAAYiC,EAAKjC,UACjBuC,EAAQN,EAAKM,MACbC,EAAOP,EAAKO,KACZC,EAAKR,EAAKQ,GACVtB,EAAQuB,YAA8BT,EAAMJ,GAE5Cc,EAASC,YAAmBT,EAAU,OACtCU,EAAUC,IAAW9C,EAAW2C,EAAQL,GAAU,SAAUF,GAAWO,EAAS,IAAMP,EAASG,GAASI,EAAS,SAAUN,GAAQM,EAAS,IAAMN,GAEtJ,GAAIlB,EAAMI,KACR,OAAoBQ,IAAMgB,cAAcC,IAAYC,YAAS,GAAI9B,EAAO,CACtEsB,GAAIA,EACJP,IAAKA,EACLlC,UAAW8C,IAAWD,EAAS1B,EAAM+B,UAAY,eAIjDhB,IACFf,EAAMe,IAAMA,GAGVM,EACFrB,EAAMqB,KAAOA,EACHC,IACVtB,EAAMqB,KAAO,UAGf,IAAIW,EAAYV,GAAM,SACtB,OAAoBV,IAAMgB,cAAcI,EAAWF,YAAS,GAAI9B,EAAO,CACrEnB,UAAW6C,QAGff,EAAOsB,YAAc,SACrBtB,EAAOuB,aA3CY,CACjBjB,QAAS,UACTE,QAAQ,EACRY,UAAU,GAyCGpB,O,iCCnDf,4GAiHMwB,EAAwB,SAACC,GAC7B,OAAQA,EAAkBf,MACxB,KAAKgB,IAAiBC,QACpB,OAtEoB,SAACF,GACzB,MAAM,IAAN,OACMA,EAAkBG,QADxB,cACqCH,EAAkBI,OADvD,aACkEJ,EAAkBK,MADpF,aAC8FL,EAAkBM,KADhH,KAqEWC,CAAkBP,GAC3B,KAAKC,IAAiBO,KACpB,OAlEiB,SAACR,GACtB,OAAKA,EAAkBS,OAKf,GAAN,OACKT,EAAkBI,OACd,iBAAgBJ,EAAkBI,OAAlC,QACD,GAHR,sBAIOJ,EAAkBS,OAJzB,cAIqCT,EAAkBU,UAJvD,IAIoE,IAJpE,qBAKMV,EAAkBW,QALxB,aAKoCX,EAAkBM,KALtD,KAJM,GAAN,OACKN,EAAkBW,QADvB,IACkC,KADlC,OACwCX,EAAkBY,QAAW,UAASZ,EAAkBY,QAA3B,cAAoD,IADzH,OAC8HZ,EAAkBM,MA+DvIO,CAAeb,GACxB,KAAKC,IAAiBa,OACpB,OApDmB,SAACd,GACxB,MAAM,GAAN,OACM,WACA,OAAQA,EAAkBe,UACxB,KAAKC,IAAYC,IACf,MAAO,aACT,KAAKD,IAAYE,QACf,MAAO,iBACT,KAAKF,IAAYG,UACf,MAAO,mBACT,QACE,MAAO,UATX,GADN,aAYanB,EAAkBW,QAZ/B,aAY2CX,EAAkBM,MAuClDc,CAAiBpB,GAC1B,KAAKC,IAAiBoB,WACpB,OArCuB,SAC3BrB,GAEA,MAAM,GAAN,OACKA,EAAkBS,OADvB,aACkCT,EAAkBW,QADpD,IAC+D,KAD/D,OACqEX,EAAkBM,MAiC5EgB,CAAqBtB,GAC9B,KAAKC,IAAiBsB,aACpB,OA/ByB,SAC7BvB,GAEA,MAAM,MAAN,OACQA,EAAkBwB,OAD1B,YAC4C,IAD5C,YACmDxB,EAAkByB,UADrE,oBAC0FzB,EAAkBM,KAD5G,IACoH,KADpH,OAC0HN,EAAkBU,UAD5I,aAC0JV,EAAkBW,QAD5K,IACuL,KADvL,OAC6LX,EAAkBM,MA2BpMoB,CAAuB1B,GAChC,KAAKC,IAAiB0B,KACpB,OAzBiB,SAAC3B,GACtB,OAAOA,EAAkB4B,aAwBdC,CAAe7B,GACxB,KAAKC,IAAiB6B,YACpB,OAvBwB,SAC5B9B,GAEA,MAAM,GAAN,OACKA,EAAkB+B,MADvB,OAC8B/B,EAAkBM,KAAlB,YAA8BN,EAAkBM,KAAhD,KAA0D,KAmB7E0B,CAAsBhC,GAC/B,QACE,MAAO,KAyCPiC,EAAoB,SACxBC,EACAC,EACAC,GAEA,OACE,yBAAK3F,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACX,WACA,IAAI4F,EAAQ,EACRC,EAAWJ,EAAcK,iBACzBL,EAAcK,iBACdL,EAAcM,KAAKC,QACnBrF,IAAOsF,2BAA2BC,aAClCT,EAAcM,KAAKC,OACnBrF,IAAOsF,2BAA2BC,aAEtC,OAAOT,EAAcM,KAAKI,KAAI,SAACC,EAAaC,GAC1C,OAAOD,EAAYE,QAAUV,EAAQC,GAChCF,KAAwBC,EAzDjB,SACxBrC,EACAgD,GAEA,IAAIjG,EAAWiD,EAAkBhD,UAC7BD,IAAaE,IAAUC,KAAKH,KAC9BA,EAAQ,UAAMI,GAAN,YAAgCC,IAAOC,WAAvC,YAAqDN,IAG/D,IAAIW,EA3Gc,SAACsC,GACnB,OAAOA,EAAkBtC,MA0GbuF,CAAYjD,GACpBkD,EAxGgB,SACpBlD,GAEA,OAAOA,EAAkBmD,OAASnD,EAAkBmD,OAAS,GAqG/CC,CAAcpD,GACxBpD,EAAcmD,EAAsBC,GACxC,OACE,kBAAC,IAAD,CACEgD,IAAKA,EACLK,GAAIL,EACJ5E,WAAU,eACVC,IAAK2B,EAAkB3B,IACvBR,QAASmC,EAAkBnC,QAC3BH,MAAOA,EACPlB,KAAM0G,EACNtG,YAAaA,EACbI,UAAWgD,EAAkBhD,YAoCjBsG,CAAkBT,EAAYU,MAAb,UAAuBpB,EAAvB,YAAoCW,KACrDD,EAAYE,QAAUV,IAAUC,KAC7BD,EA/BjB,kBAAC,IAAD,CAAMW,IAAK,eAAgB7E,GAAG,iBAC5B,yBAAKX,MAAO,CAAEgG,UAAW,QACvB,kBAAC,IAAD,CAAQ3E,QAAQ,WAAhB,0BAAkD,SA8BxC,MAfN,OAuCG4E,UAfC,SAAC7F,GACf,OACE,kBAAC,IAAD,CAASyF,GAAIK,IAAaC,cACvB/F,EAAMgG,yBAA2B,kBAAC,IAAD,MAClC,kBAAC,IAAD,CAAcC,MAAOjG,EAAMsE,cAAc2B,QACxCjG,EAAMkG,yBAA2B,kBAAC,IAAD,MACjC7B,EACCrE,EAAMsE,cACNwB,IAAaC,aACb/F,EAAMwE,qBAAsB","file":"static/js/1.d58c6fe2.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport Markdown from '../../Markdown';\nimport re_weburl from '../../../auxiliaries/regex-weburl';\nimport config from '../../../config';\n\nimport { WebPageType } from '../../../types/profileWeb';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  id: string;\n  slugPrefix: string; // `//example.com${slugPrefix}/${slug}`\n  url?: string; // link\n  webPage?: WebPageType;\n  title: string;\n  team?: string;\n  description: string;\n  thumbnail?: string;\n}\n\nconst renderTeam = (cardDetail: ComponentProps): JSX.Element | undefined => {\n  if (cardDetail.team) {\n    return (\n      <Markdown\n        className=\"content-body markdown content-text\"\n        content={cardDetail.team}\n      />\n    );\n  }\n};\n\nconst renderDescription = (cardDetail: ComponentProps): JSX.Element => {\n  return (\n    <Markdown\n      className=\"content-body markdown content-text\"\n      content={cardDetail.description}\n    />\n  );\n};\n\nconst renderCardDetail = (\n  cardDetail: ComponentProps,\n  titleColor: string = 'black'\n) => {\n  let imageSrc = cardDetail.thumbnail;\n  if (imageSrc && !re_weburl.test(imageSrc)) {\n    imageSrc = `${process.env.PUBLIC_URL}/${config.imagesPath}/${imageSrc}`;\n  }\n\n  return (\n    <>\n      <div className=\"col-md-2 content-card-img\">\n        <img\n          className=\"img-fluid border rounded image-item\"\n          alt=\"thumbnail\"\n          src={imageSrc}\n        />\n      </div>\n      <div className=\"col-md-10\">\n        <div className=\"content-text-bold\" style={{ color: `${titleColor}` }}>\n          {cardDetail.title}\n        </div>\n        {renderTeam(cardDetail)}\n        {renderDescription(cardDetail)}\n      </div>\n    </>\n  );\n};\n\nconst Card: FunctionComponent<ComponentProps> = (props: ComponentProps) => {\n  if (\n    props.webPage &&\n    props.webPage.slug &&\n    props.webPage.slug !== '' &&\n    props.webPage.detail &&\n    props.webPage.detail !== ''\n  ) {\n    if (!re_weburl.test(props.webPage.slug)) {\n      return (\n        <Link to={`${props.slugPrefix}/${props.webPage.slug}`}>\n          <div\n            className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n            style={{ marginLeft: '0', marginRight: '0' }}\n          >\n            {renderCardDetail(props, '#0028ff')}\n          </div>\n        </Link>\n      );\n    } else {\n      return (\n        <a href={props.webPage.slug}>\n          <div\n            className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n            style={{ marginLeft: '0', marginRight: '0' }}\n          >\n            {renderCardDetail(props, '#0028ff')}\n          </div>\n        </a>\n      );\n    }\n  }\n\n  if (props.url && props.url !== '') {\n    return (\n      <a href={props.url}>\n        <div\n          className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n          style={{ marginLeft: '0', marginRight: '0' }}\n        >\n          {renderCardDetail(props, '#0028ff')}\n        </div>\n      </a>\n    );\n  }\n\n  return (\n    <div\n      className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start flex-nowrap row align-content-start border content-item\"\n      style={{ marginLeft: '0', marginRight: '0' }}\n    >\n      {renderCardDetail(props)}\n    </div>\n  );\n};\n\nexport default Card;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react';\nimport SectionLabel from './SectionLabel';\nimport Content from './Content';\nimport re_weburl from '../../../auxiliaries/regex-weburl';\nimport config from '../../../config';\nimport Card from './Card'\nimport Divider from './SectionDivider';\n\nimport {\n  ArticleTypeWeb,\n  BookTypeWeb,\n  InCollectionTypeWeb,\n  MiscTypeWeb,\n  Publication,\n  Publications,\n  TechReportTypeWeb,\n  ThesisTypeWeb,\n  UnPublishedTypeWeb,\n} from '../../../types/profileWeb';\nimport {\n  ProfileField,\n  PublicationTypes,\n  ThesisTypes,\n} from '../../../types/fields';\n\nimport './styles.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\ninterface Props {\n  sectionDetail: Publications;\n  limitItemsToRender?: boolean;\n  renderDividerAboveLabel?: boolean;\n  renderDividerBelowLabel?: boolean;\n}\n\nconst renderTitle = (publicationDetail: Publication): string => {\n  return publicationDetail.title;\n};\n\nconst renderAuthors = (\n  publicationDetail: Publication\n): string => {\n  return publicationDetail.author ? publicationDetail.author : '';\n};\n\nconst renderArticleMeta = (publicationDetail: ArticleTypeWeb): string => {\n  return (\n    `_${publicationDetail.journal}_, ${publicationDetail.volume}: ${publicationDetail.pages}, ${publicationDetail.year}.`\n  );\n};\n\nconst renderBookMeta = (publicationDetail: BookTypeWeb): string => {\n  if (!publicationDetail.series) {\n    return (\n      `${publicationDetail.address},${' '}${publicationDetail.edition ? (() => `${publicationDetail.edition} edition, `)() : ''}${publicationDetail.year}`\n    );\n  } else {\n    return (\n      `${publicationDetail.volume\n          ? (() => `Volume ${publicationDetail.volume} of `)()\n          : ''}\n        _${publicationDetail.series}._ ${publicationDetail.publisher},${' '}\n        ${publicationDetail.address}, ${publicationDetail.year}.`\n    );\n  }\n};\n\nconst renderThesisMeta = (publicationDetail: ThesisTypeWeb): string => {\n  return (\n    `${(() => {\n        switch (publicationDetail.category) {\n          case ThesisTypes.PhD:\n            return 'PhD Thesis';\n          case ThesisTypes.Masters:\n            return 'Masters Thesis';\n          case ThesisTypes.Bachelors:\n            return 'Bachelors Thesis';\n          default:\n            return 'Thesis';\n        }\n      })()}, ${publicationDetail.address}, ${publicationDetail.year}`\n  );\n};\n\nconst renderTechReportMeta = (\n  publicationDetail: TechReportTypeWeb\n): string => {\n  return (\n    `${publicationDetail.series}, ${publicationDetail.address},${' '}${publicationDetail.year}`\n  );\n};\n\nconst renderInCollectionMeta = (\n  publicationDetail: InCollectionTypeWeb\n): string => {\n  return (\n    `In ${publicationDetail.editor}, editor,${' '}_${publicationDetail.booktitle}_, pages ${publicationDetail.year}.${' '}${publicationDetail.publisher}, ${publicationDetail.address},${' '}${publicationDetail.year}`\n  );\n};\n\nconst renderMiscMeta = (publicationDetail: MiscTypeWeb): string => {\n  return publicationDetail.howpublished;\n};\n\nconst renderUnPublishedMeta = (\n  publicationDetail: UnPublishedTypeWeb\n): string => {\n  return (\n    `${publicationDetail.note}${publicationDetail.year ? `, ${publicationDetail.year}.` : '.'}`\n  );\n};\n\nconst renderPublicationMeta = (publicationDetail: Publication): string => {\n  switch (publicationDetail.type) {\n    case PublicationTypes.Article:\n      return renderArticleMeta(publicationDetail as ArticleTypeWeb);\n    case PublicationTypes.Book:\n      return renderBookMeta(publicationDetail as BookTypeWeb);\n    case PublicationTypes.Thesis:\n      return renderThesisMeta(publicationDetail as ThesisTypeWeb);\n    case PublicationTypes.TechReport:\n      return renderTechReportMeta(publicationDetail as TechReportTypeWeb);\n    case PublicationTypes.InCollection:\n      return renderInCollectionMeta(publicationDetail as InCollectionTypeWeb);\n    case PublicationTypes.Misc:\n      return renderMiscMeta(publicationDetail as MiscTypeWeb);\n    case PublicationTypes.UnPublished:\n      return renderUnPublishedMeta(publicationDetail as UnPublishedTypeWeb);\n    default:\n      return '';\n  }\n};\n\nconst renderPublication = (\n  publicationDetail: Publication,\n  key: string\n): JSX.Element => {\n  let imageSrc = publicationDetail.thumbnail;\n  if (imageSrc && !re_weburl.test(imageSrc)) {\n    imageSrc = `${process.env.PUBLIC_URL}/${config.imagesPath}/${imageSrc}`;\n  }\n\n  let title = renderTitle(publicationDetail);\n  let authors = renderAuthors(publicationDetail);\n  let description = renderPublicationMeta(publicationDetail);\n  return (\n    <Card\n      key={key}\n      id={key}\n      slugPrefix={`/publication`}\n      url={publicationDetail.url}\n      webPage={publicationDetail.webPage}\n      title={title}\n      team={authors}\n      description={description}\n      thumbnail={publicationDetail.thumbnail}\n    />\n  );\n};\n\nconst renderOverflowButton = () => {\n  return (\n    <Link key={'publications'} to=\"/publications\">\n      <div style={{ textAlign: 'end' }}>\n        <Button variant=\"primary\">Full Publications List {'>>'}</Button>\n      </div>\n    </Link>\n  );\n};\n\nconst renderSectionBody = (\n  sectionDetail: Publications,\n  keyPrefix: string,\n  limitItemsToRender: boolean\n): JSX.Element => {\n  return (\n    <div className=\"content-body\">\n      <div className=\"content-list\">\n        <div className=\"content\">\n          {(() => {\n            let count = 0;\n            let maxItems = sectionDetail.maxItemsToRender\n              ? sectionDetail.maxItemsToRender\n              : sectionDetail.list.length <=\n                config.maxItemsToRenderInHomePage.publications\n              ? sectionDetail.list.length\n              : config.maxItemsToRenderInHomePage.publications;\n\n            return sectionDetail.list.map((publication, index) => {\n              return publication.render && count < maxItems\n                ? (limitItemsToRender && ++count,\n                  renderPublication(publication.value, `${keyPrefix}_${index}`))\n                : publication.render && count === maxItems\n                ? (++count, renderOverflowButton())\n                : '';\n            });\n          })()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Section = (props: Props) => {\n  return (\n    <Content id={ProfileField.Publications}>\n      {props.renderDividerAboveLabel && <Divider />}\n      <SectionLabel label={props.sectionDetail.label} />\n      {props.renderDividerBelowLabel && <Divider />}\n      {renderSectionBody(\n        props.sectionDetail,\n        ProfileField.Publications,\n        props.limitItemsToRender || false\n      )}\n    </Content>\n  );\n};\n\nexport default Section;\n"],"sourceRoot":""}