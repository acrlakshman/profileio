{"version":3,"sources":["components/themes/basic/SectionExperience.tsx"],"names":["renderItem","data","key","className","highlights","color","active","style","padding","backgroundColor","marginTop","marginBottom","boxShadow","textAlign","re_weburl","test","url","href","name","startDate","endDate","position","length","map","item","detail","Section","props","id","ProfileField","Work","renderDividerAboveLabel","label","sectionDetail","renderDividerBelowLabel","keyPrefix","marginLeft","marginRight","list","project","index","render","value"],"mappings":"wGAAA,0EA+BMA,EAAa,SACjBC,EACAC,EACAC,GAEA,IAnB4BC,EAmBtBC,EAAQJ,EAAKK,OAAS,GAAK,OACjC,OACE,yBAAKJ,IAAKA,EAAKC,UAAWA,GACxB,yBACEA,UAAU,mBACVI,MAAO,CACLC,QAAS,OACTC,gBAAiB,2BACjBC,UAAW,SACXC,aAAc,SACdC,UAAW,6BACXP,UAGF,yBAAKF,UAAU,OACb,yBAAKA,UAAU,WAAWI,MAAO,CAAEM,UAAW,SAC3CZ,EAAKK,QACN,2BACGQ,IAAUC,KAAKd,EAAKe,KAAO,IAC1B,uBAAGC,KAAMhB,EAAKe,KAAMf,EAAKiB,MAEzBjB,EAAKiB,OAIPjB,EAAKK,SACJQ,IAAUC,KAAKd,EAAKe,KAAO,IAC1B,uBAAGC,KAAMhB,EAAKe,KAAMf,EAAKiB,MAEzBjB,EAAKiB,OAIVjB,EAAKkB,WAAalB,EAAKmB,QACtB,yBAAKjB,UAAU,WAAWI,MAAO,CAAEM,UAAW,UAC5C,2BACGZ,EAAKkB,UADR,MACsBlB,EAAKmB,UAI7B,IAGJ,yBAAKb,MAAO,CAAEM,UAAW,SAAWZ,EAAKoB,UACxCpB,EAAKG,WAAWkB,OAAS,6BAAS,IA/DblB,EAgEAH,EAAKG,YA/DlBkB,OAEX,4BACGlB,EAAWmB,KAAI,SAACC,GACf,OAAO,wBAAIjB,MAAO,CAAEM,UAAW,SAAWW,EAAKC,YAMhD,iCAiGMC,UAfC,SAACC,GACf,OACE,kBAAC,IAAD,CAASC,GAAIC,IAAaC,MACvBH,EAAMI,yBAA2B,kBAAC,IAAD,MAClC,kBAAC,IAAD,CAAcC,MAAOL,EAAMM,cAAcD,QACxCL,EAAMO,yBAA2B,kBAAC,IAAD,OA3BtCjC,EA6BM0B,EAAMM,cA5BZE,EA6BMN,IAAaC,KA5BnB3B,EA6BM,uBA1BJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBACEA,UAAU,qHACVI,MAAO,CAAE6B,WAAY,MAAOC,YAAa,QAExCpC,EAAKqC,KAAKf,KAAI,SAACgB,EAASC,GACvB,OAAOD,EAAQE,OACXzC,EAAWuC,EAAQG,MAAT,UAAmBP,EAAnB,YAAgCK,GAASrC,GACnD,WAfU,IACxBF,EACAkC,EACAhC","file":"static/js/8.8c6530ee.chunk.js","sourcesContent":["import React from 'react';\nimport SectionLabel from './SectionLabel';\nimport Content from './Content';\nimport Divider from './SectionDivider';\n\nimport { BriefAndDetail, Work, WorkDetail } from '../../../types/profileWeb';\nimport { ProfileField } from '../../../types/fields';\n\nimport './styles.css';\nimport re_weburl from '../../../auxiliaries/regex-weburl';\n\ninterface ComponentProps {\n  sectionDetail: Work;\n  renderDividerAboveLabel?: boolean;\n  renderDividerBelowLabel?: boolean;\n}\n\nconst renderWorkHighlights = (highlights: BriefAndDetail[]): JSX.Element => {\n  if (highlights.length) {\n    return (\n      <ul>\n        {highlights.map((item: BriefAndDetail) => {\n          return <li style={{ textAlign: 'left' }}>{item.detail}</li>;\n        })}\n      </ul>\n    );\n  }\n\n  return <div></div>;\n};\n\nconst renderItem = (\n  data: WorkDetail,\n  key: string,\n  className: string\n): JSX.Element => {\n  const color = data.active ? '' : 'grey';\n  return (\n    <div key={key} className={className}>\n      <div\n        className=\"col-md-12 border\"\n        style={{\n          padding: '15px',\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          marginTop: '1.5rem',\n          marginBottom: '1.5rem',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n          color\n        }}\n      >\n        <div className=\"row\">\n          <div className=\"col-md-6\" style={{ textAlign: 'left' }}>\n            {data.active &&\n            <b>\n              {re_weburl.test(data.url || '') ? (\n                <a href={data.url}>{data.name}</a>\n              ) : (\n                data.name\n              )}\n            </b>\n            }\n            {!data.active &&\n              (re_weburl.test(data.url || '') ? (\n                <a href={data.url}>{data.name}</a>\n              ) : (\n                data.name\n              ))\n            }\n          </div>\n          {data.startDate && data.endDate ? (\n            <div className=\"col-md-6\" style={{ textAlign: 'right' }}>\n              <i>\n                {data.startDate} - {data.endDate}\n              </i>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div style={{ textAlign: 'left' }}>{data.position}</div>\n        {data.highlights.length ? <hr /> : ''}\n        {renderWorkHighlights(data.highlights)}\n      </div>\n    </div>\n  );\n};\n\nconst renderSectionBody = (\n  data: Work,\n  keyPrefix: string,\n  className: string\n): JSX.Element => {\n  return (\n    <div className=\"content-body\">\n      <div className=\"content-list\">\n        <div\n          className=\"flex-shrink-1 justify-content-start align-items-start align-content-start align-self-start row align-content-start\"\n          style={{ marginLeft: '5px', marginRight: '5px' }}\n        >\n          {data.list.map((project, index) => {\n            return project.render\n              ? renderItem(project.value, `${keyPrefix}_${index}`, className)\n              : '';\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Section = (props: ComponentProps) => {\n  return (\n    <Content id={ProfileField.Work}>\n      {props.renderDividerAboveLabel && <Divider />}\n      <SectionLabel label={props.sectionDetail.label} />\n      {props.renderDividerBelowLabel && <Divider />}\n      {renderSectionBody(\n        props.sectionDetail,\n        ProfileField.Work,\n        'offset-md-2 col-md-8'\n      )}\n    </Content>\n  );\n};\n\nexport default Section;\n"],"sourceRoot":""}