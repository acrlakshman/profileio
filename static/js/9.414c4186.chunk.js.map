{"version":3,"sources":["components/themes/basic/SectionGallery.tsx"],"names":["renderVideo","item","key","value","platform","videoId","className","src","allow","title","allowFullScreen","renderYouTubeVideo","renderVimeoVideo","renderGalleryItem","type","imageSrc","re_weburl","test","process","config","imagesPath","caption","description","alt","renderImage","Section","props","id","ProfileField","Gallery","label","sectionDetail","keyPrefix","list","map","index","render"],"mappings":"wGAAA,kEAgDMA,GAhDN,MAgDoB,SAACC,EAAmBC,GACtC,GAAID,EAAKE,MAAMC,UAAYH,EAAKE,MAAME,QACpC,OAAQJ,EAAKE,MAAMC,UACjB,IAAK,UACH,OApCmB,SAACH,EAAmBC,GAC7C,OACE,yBAAKA,IAAKA,EAAKI,UAAU,YACvB,yBAAKA,UAAU,uDACb,4BACEA,UAAU,wBACVC,IAAG,wCAAmCN,EAAKE,MAAME,SACjDG,MAAM,2FACNC,MAAOR,EAAKE,MAAME,QAClBK,iBAAe,MA2BVC,CAAmBV,EAAMC,GAClC,IAAK,QACH,OAtBiB,SAACD,EAAmBC,GAC3C,OACE,yBAAKA,IAAKA,EAAKI,UAAU,YACvB,yBAAKA,UAAU,uDACb,4BACEA,UAAU,wBACVC,IAAG,yCAAoCN,EAAKE,MAAME,QAA/C,wCACHG,MAAM,uBACNC,MAAOR,EAAKE,MAAME,QAClBK,iBAAe,MAaVE,CAAiBX,EAAMC,GAChC,QACE,OAAO,8BAIb,OAAO,gCAgCHW,EAAoB,SAACZ,EAAmBC,GAC5C,OAAQD,EAAKE,MAAMW,MACjB,IAAK,QACH,OAhCc,SAACb,EAAmBC,GACtC,IAAIa,EAAWd,EAAKE,MAAMI,IAO1B,OANIQ,IACGC,IAAUC,KAAKF,KAClBA,EAAQ,UAAMG,GAAN,YAAgCC,IAAOC,WAAvC,YAAqDL,KAK/D,yBAAKb,IAAKA,EAAKI,UAAU,YACvB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,mBACb,4BAAKL,EAAKE,MAAMkB,QAAUpB,EAAKE,MAAMkB,QAAQZ,MAAQ,IACrD,uBAAGH,UAAU,QACVL,EAAKE,MAAMkB,QAAUpB,EAAKE,MAAMkB,QAAQC,YAAc,MAI7D,yBACEhB,UAAU,YACVC,IAAKQ,EACLQ,IAAKtB,EAAKE,MAAMkB,QAAUpB,EAAKE,MAAMkB,QAAQZ,MAAQ,OAUlDe,CAAYvB,EAAMC,GAC3B,IAAK,QACH,OAAOF,EAAYC,EAAMC,GAC3B,QACE,OAAO,gCAiCEuB,UAdC,SAACC,GACf,OACE,kBAAC,IAAD,CAASC,GAAIC,IAAaC,SACxB,yBAAKvB,UAAU,WACb,+BACA,wCACA,gCAEF,kBAAC,IAAD,CAAcwB,MAAOJ,EAAMK,cAAcD,SAtB7CC,EAuBuBL,EAAMK,cAtB7BC,EAsB4CJ,IAAaC,QAnBvD,yBAAKvB,UAAU,kBACZyB,EAAcE,KAAKC,KAAI,SAACjC,EAAmBkC,GAC1C,OAAOlC,EAAKmC,OACRvB,EAAkBZ,EAAD,UAAU+B,EAAV,YAAuBG,IACxC,SATc,IACxBJ,EACAC","file":"static/js/9.414c4186.chunk.js","sourcesContent":["import React from 'react';\nimport { Element } from 'react-scroll';\nimport Content from './Content';\nimport SectionLabel from './SectionLabel';\nimport re_weburl from '../../../auxiliaries/regex-weburl';\nimport config from '../../../config';\n\nimport { Gallery, GalleryItem } from '../../../types/profileWeb';\nimport { ProfileField } from '../../../types/fields';\n\nimport './styles.css';\n\ninterface ComponentProps {\n  sectionDetail: Gallery;\n}\n\nconst renderYouTubeVideo = (item: GalleryItem, key: string): JSX.Element => {\n  return (\n    <div key={key} className=\"col-md-4\">\n      <div className=\"gallery-item embed-responsive embed-responsive-1by1\">\n        <iframe\n          className=\"embed-responsive-item\"\n          src={`https://www.youtube.com/embed/${item.value.videoId}`}\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          title={item.value.videoId}\n          allowFullScreen\n        ></iframe>\n      </div>\n    </div>\n  );\n};\n\nconst renderVimeoVideo = (item: GalleryItem, key: string): JSX.Element => {\n  return (\n    <div key={key} className=\"col-md-4\">\n      <div className=\"gallery-item embed-responsive embed-responsive-1by1\">\n        <iframe\n          className=\"embed-responsive-item\"\n          src={`https://player.vimeo.com/video/${item.value.videoId}?title=0&byline=0&portrait=0&badge=0`}\n          allow=\"autoplay; fullscreen\"\n          title={item.value.videoId}\n          allowFullScreen\n        ></iframe>\n      </div>\n    </div>\n  );\n};\n\nconst renderVideo = (item: GalleryItem, key: string): JSX.Element => {\n  if (item.value.platform && item.value.videoId) {\n    switch (item.value.platform) {\n      case 'youtube':\n        return renderYouTubeVideo(item, key);\n      case 'vimeo':\n        return renderVimeoVideo(item, key);\n      default:\n        return <div></div>;\n    }\n  }\n\n  return <div></div>;\n};\n\nconst renderImage = (item: GalleryItem, key: string): JSX.Element => {\n  let imageSrc = item.value.src;\n  if (imageSrc) {\n    if (!re_weburl.test(imageSrc)) {\n      imageSrc = `${process.env.PUBLIC_URL}/${config.imagesPath}/${imageSrc}`;\n    }\n  }\n\n  return (\n    <div key={key} className=\"col-md-4\">\n      <div className=\"gallery-item\">\n        <div className=\"caption\">\n          <div className=\"caption-content\">\n            <h2>{item.value.caption ? item.value.caption.title : ''}</h2>\n            <p className=\"mb-0\">\n              {item.value.caption ? item.value.caption.description : ''}\n            </p>\n          </div>\n        </div>\n        <img\n          className=\"img-fluid\"\n          src={imageSrc}\n          alt={item.value.caption ? item.value.caption.title : ''}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst renderGalleryItem = (item: GalleryItem, key: string): JSX.Element => {\n  switch (item.value.type) {\n    case 'image':\n      return renderImage(item, key);\n    case 'video':\n      return renderVideo(item, key);\n    default:\n      return <div></div>;\n  }\n};\n\nconst renderSectionBody = (\n  sectionDetail: Gallery,\n  keyPrefix: string\n): JSX.Element => {\n  return (\n    <div className=\"row no-gutters\">\n      {sectionDetail.list.map((item: GalleryItem, index: number) => {\n        return item.render\n          ? renderGalleryItem(item, `${keyPrefix}_${index}`)\n          : '';\n      })}\n    </div>\n  );\n};\n\nconst Section = (props: ComponentProps) => {\n  return (\n    <Content id={ProfileField.Gallery}>\n      <div className=\"divider\">\n        <span></span>\n        <span>&#10038;</span>\n        <span></span>\n      </div>\n      <SectionLabel label={props.sectionDetail.label} />\n      {renderSectionBody(props.sectionDetail, ProfileField.Gallery)}\n    </Content>\n  );\n};\n\nexport default Section;\n"],"sourceRoot":""}